#!/bin/sh

# PLUGIN: WM TEMP CHECK
# AUTHOR: DAN MONGE @MACITPROS
# DATE:   MAY/04/2018

# Custom plugin for Watchman Monitoring to alert when Mac is temperature is running above
# 80ºC (175ºF) or any fans have a minimum speed of 200 RPM. Over 80ºC indicates a physical
# inspection of the computer is necessary as it may be over heating. Fan speed of less
# then 500 RPM indicates a fan that may be failing (especially if it is at 0 RPM)
# New for v.0.7.1.0 Average temperature reported. Will provide informational warning if
# average is above 60ºC. High average temperature plus low fan speed is a good indicator
# of a potenial overheating issue that warrants further physical inspection.

# Binary built from SMCKit AUTHOR: beltex
# https://github.com/beltex/SMCKit

# Additional information I'd like to setup, a preference pane option
# to set the temperature threshold, disable certain sensor monitors,
# adjust the fan speed number.

# Runs the Binary and gets the information to set as a variable
# sed to remove extraneous information from output
TEMPNFANS="$(/Library/MonitoringClient/Utilities/smckit  | sed -n '/-- Power --/q;p' | sed '/CPU_0_DIE/d' | sed '/HDD_PROXIMITY/d' | sed '/AMBIENT_AIR_0/d' | sed 's/\[0;0m$//' |  sed 's/\[0;0m//')"

# Finds the highest temperature
HIGHTEMPS=$(echo "${TEMPNFANS}" | awk '/.0°C/ {print $2}' | grep -Eo '[0-9]{1,3}' | sort -nri | head -n 1)

# Finds the lowest fan speed
LOWFANSPEED=$(echo "${TEMPNFANS}" | awk '/RPM/ {print $2}' | grep -Eo '[0-9]{1,4}' | sort -ni | head -n 1)

# Finds the average temperature
AVERAGETEMPS=$(echo "$TEMPNFANS" | sed -n '/-- Temperature/,/^-- Fan/p' | tr -cd "[:print:]\n" | sed '1d;$d' | awk '{if ($2 > 0) {sum+=$2;y+=1;}} END{print sum/y}' | xargs printf "%.0f\n")

# Temp check - Warn if any sensor is above 100ºC
if (("$HIGHTEMPS" > "100")); then
echo "High temperature issue found.\nA single sensor temperature is at or above 100ºC \nAverage temperature is ""$AVERAGETEMPS""°C\n\n$TEMPNFANS\n" | sed 's/[^[:print:]\t]//g'
exit 2

# Fan speed check - Informational below 200 RPM
elif (($LOWFANSPEED < 200)); then
echo "Low fan speed found.\nWatch for potential temperature issues. \nAverage temperature is ""$AVERAGETEMPS""°C\n\n$TEMPNFANS\n" | sed 's/[^[:print:]\t]//g'
exit 20

# Average temp check - Informational if above 60ºC
elif (($AVERAGETEMPS > 60)); then
echo "High overall temperature found.\nWatch for potential overheating. \nAverage temperature is ""$AVERAGETEMPS""°C\n\n$TEMPNFANS\n" | sed 's/\[0;0m//g' | sed 's/[^[:print:]\t]//g'
exit 20
# sed used after echo to clean up output to Watchman Monitoring dashboard.

# All good, nothing to see here.
else
echo "No temperature or fan issues to report. \nAverage temperature is ""$AVERAGETEMPS""°C\n\n$TEMPNFANS\n" | sed 's/[^[:print:]\t]//g'
exit 0
fi